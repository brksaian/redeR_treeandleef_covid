if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

install.packages("igraph")
BiocManager::install("TreeAndLeaf")
BiocManager::install("RedeR")


#--- Load required packages
library("RedeR")
library("igraph")
library("TreeAndLeaf")

#--- Set the R-to-Java interface
rdp <- RedPort()

#--- Initialize the R-to-Java interface
calld(rdp)

resetd(rdp)

#-- Generate an 'hclust' object from the 'iris' dataset
hc_iris <- hclust(dist(iris[,-5]))

#-- Convert the 'hclust' object into a 'tree-and-leaf' object
tal <- treeAndLeaf(hc_iris)

#--- Map 'iris' variables to the tree-and-leaf graph
#Note: 'refcol = 0' indicates that 'iris' rownames will be used as mapping IDs
tal <- att.mapv(g = tal, dat = iris, refcol = 0)

#--- Set node attributes using the 'att.setv' wrapper function
cols <- c("#80b1d3","#fb8072","#8dd3c7")
tal <- att.setv(tal, from="Species", to="nodeColor", cols=cols)
tal <- att.setv(tal, from="Species", to="nodeLineColor", cols=cols) 
tal <- att.setv(tal, from="Petal.Width", to="nodeSize", nquant=6, xlim=c(5,50,1))

#--- Set other attributes using igraph shortcuts
V(tal)$nodeAlias <- ""
E(tal)$edgeColor <- "grey70"

#--- Send the tree-and-leaf graph to RedeR
addGraph(rdp, tal, gzoom=50)

#--- Suggestion: anchor inner nodes to adjust the final layout
selectNodes(rdp, V(tal)$name[!V(tal)$isLeaf], anchor=TRUE)

#--- Call 'relax' to fine-tune the leaf nodes
relax(rdp, p1=10, p2=100, p3=2, p4=120, p5=1)

#--- Add legends
addLegend.color(rdp, tal, title="Species")
addLegend.size(rdp, tal, title="PetalWidth", position="bottomright")

